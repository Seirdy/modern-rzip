name: Build

on: [ push, pull_request ]

jobs:
  build-gcc:
    name: Ubuntu GCC
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo apt update -q -y
        sudo apt install -q -y gcc make libgcrypt-dev libgpg-error-dev
    - name: Configure
      run:
        ./configure CC=gcc CXX=g++
    - name: Make
      run: make -j$(nproc)
  
  build-clang:
    name: Ubuntu Clang
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo apt update -q -y
        sudo apt install -q -y clang make libgcrypt-dev libgpg-error-dev
    - name: Configure
      run: |
        ./configure CC=clang CXX=clang++ --enable-lto --enable-static
    - name: Make
      run: |
        make -j$(nproc)
  
  build-macos:
    name: MacOS Clang
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Install dependencies
      run: |
        brew install llvm make libgcrypt libgpg-error
    - name: Configure
      run: |
        ./configure CC=clang CXX=clang++
    - name: Make
      run: make -j$(sysctl -n hw.logicalcpu)
  
  build-macos-gcc:
    name: MacOS GCC
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Install dependencies
      run: |
        brew install gcc make libgcrypt libgpg-error
    - name: Configure
      run: |
        ./configure CC=gcc CXX=g++
    - name: Make
      run: make -j$(sysctl -n hw.logicalcpu)
  
  build-windows-msys2:
    name: Windows msys2 GCC
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - uses: msys2/setup-msys2@v2
      with:
        install: git gcc make libgcrypt-devel libgpg-error-devel msys2-runtime-devel
    - name: Configure
      run: |
        ./configure CC=gcc CXX=g++ --enable-lto --enable-static
    - name: Make
      run: make -j$(nproc)
  
  build-archs:
    name: aarch64, s390x, ppc64le Debian Clang
    strategy:
      fail-fast: false
      matrix:
        arch: [ aarch64, s390x, ppc64le ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - uses: uraimo/run-on-arch-action@v2
      name: Run in the container
      with:
        arch: ${{ matrix.arch }}
        distro: stretch
        shell: /bin/sh
        dockerRunArgs: |
          --volume "${PWD}:/modern-rzip"
        install: |
          apt update -q -y
          apt install -q -y git clang make libgcrypt-dev libgpg-error-dev
        run: |
          cd /modern-rzip
          ./configure CC=clang CXX=clang++ --enable-static
          make
  
  build-archs-gcc:
    name: aarch64, s390x, ppc64le Debian GCC
    strategy:
      fail-fast: false
      matrix:
        arch: [ aarch64, s390x, ppc64le ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - uses: uraimo/run-on-arch-action@v2
      name: Run in the container
      with:
        arch: ${{ matrix.arch }}
        distro: stretch
        shell: /bin/sh
        dockerRunArgs: |
          --volume "${PWD}:/modern-rzip"
        install: |
          apt update -q -y
          apt install -q -y git gcc g++ make libgcrypt-dev libgpg-error-dev
        run: |
          cd /modern-rzip
          ./configure CC=gcc CXX=g++
          make

